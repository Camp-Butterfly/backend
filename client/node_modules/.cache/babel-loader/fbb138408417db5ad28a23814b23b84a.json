{"ast":null,"code":"var _jsxFileName = \"/Users/uks/camp-butterfly/basic/src/SearchForm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Query from './Query.js';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query_city: '',\n      areas: []\n    };\n    this.updateQuery = this.updateQuery.bind(this);\n    this.fetchQueryResults = this.fetchQueryResults.bind(this);\n    console.log(\"constructor\");\n  }\n\n  updateQuery(event) {\n    this.setState({\n      query_city: event.target.value.toUpperCase()\n    });\n  }\n  /*\n    componentDidMount() {\n      console.log(\"didMount\");\n      this.fetchQueryResults();\n    }\n  */\n\n\n  fetchQueryResults(event) {\n    event.preventDefault();\n    let search = \"http://ctp-zip-api.herokuapp.com/city/\" + this.state.query_city;\n    axios.get(search).then(result => {\n      console.log(result);\n      this.setState({\n        areas: result.data\n      });\n    }); //  console.log(this.state.areas);\n  }\n\n  render() {\n    console.log(\"render\");\n    /*\n    var result = this.state.data.map((area) =>\n    <Query data={area} key={area.ZipCode} />\n    );\n    */\n\n    console.log(this.state.areas);\n    let result = this.state.areas.map(properties => React.createElement(Query, {\n      data: properties,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"City Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.updateQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fetchQueryResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Search\"), result);\n  }\n\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/uks/camp-butterfly/basic/src/SearchForm.js"],"names":["React","Component","axios","Query","SearchForm","constructor","props","state","query_city","areas","updateQuery","bind","fetchQueryResults","console","log","event","setState","target","value","toUpperCase","preventDefault","search","get","then","result","data","render","map","properties"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,KAAK,EAAC;AAFG,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AAEJE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA8B;;AAE5BJ,EAAAA,WAAW,CAACK,KAAD,EAAQ;AACf,SAAKC,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAEO,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB;AADA,KAAd;AAGD;AACL;;;;;;;;AAOEP,EAAAA,iBAAiB,CAACG,KAAD,EAAQ;AACvBA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIC,MAAM,GAAG,2CAA2C,KAAKd,KAAL,CAAWC,UAAnE;AACEN,IAAAA,KAAK,CAACoB,GAAN,CAAUD,MAAV,EACCE,IADD,CACMC,MAAM,IAAI;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACE,WAAKR,QAAL,CAAc;AAACP,QAAAA,KAAK,EAACe,MAAM,CAACC;AAAd,OAAd;AACD,KAJH,EAHqB,CAQrB;AACD;;AAEHC,EAAAA,MAAM,GAAG;AACXb,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;;;;;;AAMAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,KAAvB;AACI,QAAIe,MAAM,GAAG,KAAKjB,KAAL,CAAWE,KAAX,CAAiBkB,GAAjB,CAAsBC,UAAD,IAC9B,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAb;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWW,KAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKR,WAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,EASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,EAUQ;AAAQ,MAAA,OAAO,EAAE,KAAKE,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVR,EAYSY,MAZT,CADF;AAmBD;;AAnEgC;;AAsEnC,eAAepB,UAAf","sourcesContent":["import React, {Component} from 'react'\nimport './App.css';\nimport axios from 'axios';\nimport Query from './Query.js';\n\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        query_city:'',\n        areas:[]\n    };\n    this.updateQuery = this.updateQuery.bind(this);\n    this.fetchQueryResults = this.fetchQueryResults.bind(this);\n\nconsole.log(\"constructor\");  }\n\n  updateQuery(event) {\n      this.setState({\n        query_city: event.target.value.toUpperCase()\n      });\n    }\n/*\n  componentDidMount() {\n    console.log(\"didMount\");\n    this.fetchQueryResults();\n  }\n*/\n\n  fetchQueryResults(event) {\n    event.preventDefault();\n    let search = \"http://ctp-zip-api.herokuapp.com/city/\" + this.state.query_city;\n      axios.get(search)\n      .then(result => {\n        console.log(result)\n          this.setState({areas:result.data});\n        })\n      //  console.log(this.state.areas);\n    }\n\n  render() {\nconsole.log(\"render\")\n/*\nvar result = this.state.data.map((area) =>\n<Query data={area} key={area.ZipCode} />\n);\n*/\n\nconsole.log(this.state.areas)\n    let result = this.state.areas.map((properties) =>\n        <Query data={properties} />\n    );\n\n    return (\n      <form>\n        <label>\n          City Name:\n            <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.updateQuery}\n              />\n        </label>\n              <br />\n              <button onClick={this.fetchQueryResults}>Search</button>\n\n              {result}\n      </form>\n\n\n\n    );\n  }\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}